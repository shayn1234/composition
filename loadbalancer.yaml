tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/fabric-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml


inputs:
  lb_network_name:
    default: lb-network
    type: string

  lb_network_subnet_name:
    default: lb-network-subnet
    type: string

  image_id:
    default:
    type: string

  flavor_id:
    default:
    type: string


node_templates:

# Create an Application Network
  lb_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: { get_input: lb_network_name }
      use_external_resource : false

  lb_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: { get_input: lb_network_subnet_name }
      use_external_resource : false
      subnet:
        ip_version: 4
        cidr: 10.10.0.0/24
        gateway_ip: 10.10.0.1
    relationships:
      - target: lb_network
        type: cloudify.relationships.contained_in


# Create a LB VM

  lb_vm:
    type: cloudify.openstack.nodes.Server
    properties:
      server:
        image: { get_input: image_id }
        flavor: { get_input: flavor_id }
    relationships:
      - target: lb_network
        type: cloudify.openstack.server_connected_to



  outputs:
      lb_internal_ip:
          value: { get_attribute: [ lb_vm, host_ip ] }
      lb_network_id:
          value: { get_property: [ lb_network, resource_id ] }



